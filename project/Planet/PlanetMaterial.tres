[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=3]
code = "shader_type spatial;

uniform float min_height;
uniform float max_height;
uniform sampler2D height_color;

varying float height;

void fragment() {
	float t = height / (max_height-min_height) - (min_height / (max_height-min_height));
	vec3 color = texture(height_color, vec2(t, 0.0)).rgb;
	ALBEDO = color;
}

void vertex() {
	height = length(VERTEX);
}"

[sub_resource type="Gradient" id=1]
offsets = PoolRealArray( 0, 0.0986547, 0.423767, 0.793103, 1 )
colors = PoolColorArray( 0.0865848, 0.0216138, 1, 1, 0.47152, 0.482422, 0.228699, 1, 0.0957679, 0.333984, 0.0966984, 1, 0.247701, 0.283203, 0.272802, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=2]
gradient = SubResource( 1 )
width = 128

[resource]
shader = SubResource( 3 )
shader_param/min_height = 0.818
shader_param/max_height = 1.00269
shader_param/height_color = SubResource( 2 )
